version: "3.3"

services:
  api:
    build:
      context: .
    image: moleculer
    env_file: docker-compose.env
    environment:
      SERVICES: api
      PORT: 3000
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
    networks:
      - internal

  product:
    build:
      context: .
    image: moleculer
    env_file: docker-compose.env
    environment:
      SERVICES: product
    depends_on:
      - mongo
      - redis
    networks:
      - internal

  cart:
    build:
      context: .
    image: moleculer
    env_file: docker-compose.env
    environment:
      SERVICES: cart
    depends_on:
      - mongo
      - redis
    networks:
      - internal

  order:
    build:
      context: .
    image: moleculer
    env_file: docker-compose.env
    environment:
      SERVICES: order
    depends_on:
      - mongo
      - redis
    networks:
      - internal

  partner:
    build:
      context: .
    image: moleculer
    env_file: docker-compose.env
    environment:
      SERVICES: partner
    depends_on:
      - mongo
      - redis
    networks:
      - internal

  mongo:
    image: mongo:4
    volumes:
      - data:/data/db
    networks:
      - internal

  redis:
    image: redis:alpine
    networks:
      - internal

  rabbitmq:
    image: rabbitmq:3.13.1
    container_name: "rabbitmq"
    ports:
      - 5673:5672
      - 15673:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_logs:/var/log/rabbitmq
    networks:
      - internal

  traefik:
    image: traefik:v2.4
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - default

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is enabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
      # Uncomment to disable scribe
      # - SCRIBE_ENABLED=false
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
    networks:
      - internal
      - default

networks:
  internal:

volumes:
  data:
  rabbitmq_data:
  rabbitmq_logs:
