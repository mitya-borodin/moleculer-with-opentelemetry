{"mappings":"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","sources":["webapp/main.js"],"sourcesContent":["import {\n\tSpanStatusCode,\n\tcontext,\n\tpropagation,\n\ttrace,\n} from \"@opentelemetry/api\";\n\nconst tracer = trace.getTracer(\"webapp\");\n\nconst { createApp } = Vue;\n\nconst app = createApp({\n\tdata() {\n\t\treturn {\n\t\t\tapiSearchText: \"\",\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: \"home\",\n\t\t\t\t\tcaption: \"Home\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"apis\",\n\t\t\t\t\tcaption: \"REST API\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"nodes\",\n\t\t\t\t\tcaption: \"Nodes\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"services\",\n\t\t\t\t\tcaption: \"Services\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"webapp\",\n\t\t\t\t\tcaption: \"Webapp\",\n\t\t\t\t},\n\t\t\t],\n\t\t\tpage: \"home\",\n\t\t\trequests: {},\n\t\t\topenAuthorizeDialog: false,\n\t\t\tauth: {\n\t\t\t\ttenant: \"\",\n\t\t\t\tusername: \"\",\n\t\t\t\tpassword: \"\",\n\t\t\t\ttoken: \"\",\n\t\t\t},\n\t\t\tglobalAuth: {\n\t\t\t\ttenant: \"\",\n\t\t\t\tusername: \"\",\n\t\t\t\tpassword: \"\",\n\t\t\t\ttoken: \"\",\n\t\t\t},\n\t\t\tfields: {},\n\t\t\tbroker: null,\n\t\t\tnodes: [],\n\t\t\tservices: [],\n\t\t\tactions: {},\n\t\t\tshowBrokerOptions: false,\n\t\t\tcars: [],\n\t\t\tcarts: [],\n\t\t\tpartners: [],\n\t\t\tproducts: [],\n\t\t\tusers: [],\n\t\t\torders: [],\n\t\t};\n\t},\n\tcomputed: {\n\t\tfilteredServices() {\n\t\t\treturn this.services.filter((svc) => !svc.name.startsWith(\"$\"));\n\t\t},\n\t\tfilteredApis() {\n\t\t\tconst s = this.apiSearchText.toLocaleLowerCase();\n\n\t\t\tif (!this.apiSearchText) {\n\t\t\t\treturn this.requests;\n\t\t\t} else {\n\t\t\t\tconst reqs = {};\n\n\t\t\t\tfor (const key in this.requests)\n\t\t\t\t\treqs[key] = this.requests[key].filter(\n\t\t\t\t\t\t(r) =>\n\t\t\t\t\t\t\tr?.action?.toLocaleLowerCase().includes(s) ||\n\t\t\t\t\t\t\tr?.rest?.method?.toLocaleLowerCase().includes(s) ||\n\t\t\t\t\t\t\tr?.rest?.path?.toLocaleLowerCase().includes(s) ||\n\t\t\t\t\t\t\tr?.rest?.url?.toLocaleLowerCase().includes(s)\n\t\t\t\t\t);\n\t\t\t\treturn reqs;\n\t\t\t}\n\t\t},\n\t},\n\tmethods: {\n\t\tresetAuthorization() {\n\t\t\tthis.auth = {\n\t\t\t\ttenant: \"\",\n\t\t\t\tusername: \"\",\n\t\t\t\tpassword: \"\",\n\t\t\t\ttoken: \"\",\n\t\t\t};\n\n\t\t\tthis.saveAuthorize();\n\t\t},\n\t\tauthorize() {\n\t\t\tfetch(\"/api/v1/identity/auth/signin\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.auth),\n\t\t\t}).then((res) => {\n\t\t\t\tif (res.status == 401) {\n\t\t\t\t\tthis.openAuthorizeDialog = true;\n\n\t\t\t\t\talert(\"Invalid username or password\");\n\t\t\t\t} else if (res.status == 200)\n\t\t\t\t\tres.json().then((data) => {\n\t\t\t\t\t\tthis.auth.token =\n\t\t\t\t\t\t\tres.headers.get(\"Authorization\") || data.token;\n\t\t\t\t\t\tthis.auth.tenant =\n\t\t\t\t\t\t\tres.headers.get(\"x-tenant-id\") || data.tenant;\n\t\t\t\t\t});\n\t\t\t\telse alert(\"Not authorized\");\n\t\t\t});\n\t\t},\n\t\tsaveAuthorize() {\n\t\t\tthis.globalAuth = {\n\t\t\t\t...this.auth,\n\t\t\t};\n\n\t\t\tlocalStorage.setItem(\"globalAuth\", JSON.stringify(this.globalAuth));\n\n\t\t\tthis.openAuthorizeDialog = false;\n\t\t},\n\t\trefreshApiPage() {\n\t\t\treturn this.updateServiceList();\n\t\t},\n\t\tshowAuthorizeDialog() {\n\t\t\tthis.openAuthorizeDialog = true;\n\t\t},\n\t\tcloseAuthorizeDialog() {\n\t\t\tthis.openAuthorizeDialog = false;\n\t\t},\n\t\tchangePage(page) {\n\t\t\tthis.page = page;\n\n\t\t\tlocalStorage.setItem(\"lastPage\", this.page);\n\n\t\t\tif (this.page == \"apis\") {\n\t\t\t\treturn this.updateServiceList();\n\t\t\t} else {\n\t\t\t\tthis.updatePageResources();\n\t\t\t}\n\t\t},\n\t\thumanize(ms) {\n\t\t\treturn ms > 1500 ? (ms / 1500).toFixed(2) + \" s\" : ms + \" ms\";\n\t\t},\n\t\tgetServiceActions(svc) {\n\t\t\treturn Object.keys(svc.actions)\n\t\t\t\t.map((name) => this.actions[name])\n\t\t\t\t.filter((action) => !!action);\n\t\t},\n\t\tgetActionParams(action, maxLen) {\n\t\t\tif (action.action && action.action.params) {\n\t\t\t\tconst s = Object.keys(action.action.params).join(\", \");\n\n\t\t\t\treturn s.length > maxLen ? s.substr(0, maxLen) + \"\\u2026\" : s;\n\t\t\t}\n\n\t\t\treturn \"-\";\n\t\t},\n\t\tgetActionREST(svc, action) {\n\t\t\tif (action.action.rest) {\n\t\t\t\tlet prefix = svc.fullName || svc.name;\n\n\t\t\t\tif (typeof svc.settings.rest == \"string\") {\n\t\t\t\t\tprefix = svc.settings.rest;\n\t\t\t\t}\n\n\t\t\t\tif (typeof action.action.rest == \"string\") {\n\t\t\t\t\tif (action.action.rest.indexOf(\" \") !== -1) {\n\t\t\t\t\t\tconst p = action.action.rest.split(\" \");\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\"<span class='badge'>\" +\n\t\t\t\t\t\t\tp[0] +\n\t\t\t\t\t\t\t\"</span> \" +\n\t\t\t\t\t\t\tprefix +\n\t\t\t\t\t\t\tp[1]\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\"<span class='badge'>*</span> \" +\n\t\t\t\t\t\t\tprefix +\n\t\t\t\t\t\t\taction.action.rest\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"<span class='badge'>\" +\n\t\t\t\t\t\t(action.action.rest.method || \"*\") +\n\t\t\t\t\t\t\"</span> \" +\n\t\t\t\t\t\tprefix +\n\t\t\t\t\t\taction.action.rest.path\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t},\n\t\tgetRest(item) {\n\t\t\tif (!item.rest) {\n\t\t\t\treturn item.rest;\n\t\t\t}\n\n\t\t\tif (typeof item.rest === \"object\") {\n\t\t\t\treturn item.rest;\n\t\t\t}\n\n\t\t\tif (item.rest.indexOf(\" \") !== -1) {\n\t\t\t\tconst p = item.rest.split(\" \");\n\n\t\t\t\treturn {\n\t\t\t\t\tmethod: p[0],\n\t\t\t\t\tpath: p[1],\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tmethod: \"*\",\n\t\t\t\t\tpath: item.rest,\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tgetFields(item, method, url) {\n\t\t\tif (!item.params) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst r = [];\n\n\t\t\tfor (const key in item.params) {\n\t\t\t\tif (key.startsWith(\"$\")) continue;\n\t\t\t\tif (item.params[key].readonly === true) continue;\n\t\t\t\tif (item.params[key].hidden === true) continue;\n\t\t\t\tconst dataType = item.params[key].type || item.params[key];\n\t\t\t\tconst hidden = item.params[key].hidden || false;\n\t\t\t\tconst required = item.params[key].required || false;\n\t\t\t\tconst optional = Array.isArray(item.params[key])\n\t\t\t\t\t? item.params[key].every((xx) => xx.optional === true)\n\t\t\t\t\t: item.params[key].optional || false;\n\t\t\t\tconst maxLength = item.params[key].max || undefined;\n\t\t\t\tconst minLength = item.params[key].min || undefined;\n\t\t\t\tconst pattern = item.params[key].pattern || undefined;\n\t\t\t\tconst values = item.params[key].values || undefined;\n\t\t\t\tlet type = \"text\";\n\t\t\t\tlet value = item.params[key].default || undefined;\n\t\t\t\tif (dataType.includes(\"number\")) type = \"number\";\n\t\t\t\tif (dataType === \"boolean\") {\n\t\t\t\t\ttype = \"checkbox\";\n\t\t\t\t\tvalue = value || false;\n\t\t\t\t}\n\t\t\t\tif (dataType === \"string\") type = \"text\";\n\t\t\t\tif (dataType === \"object\") type = \"textarea\";\n\t\t\t\tif (dataType === \"array\") type = \"textarea\";\n\t\t\t\tif (dataType === \"file\") type = \"file\";\n\t\t\t\tif (dataType === \"date\") type = \"date\";\n\t\t\t\tif (dataType === \"datetime\") type = \"datetime\";\n\t\t\t\tif (dataType === \"time\") type = \"time\";\n\t\t\t\tif (dataType === \"password\") type = \"password\";\n\t\t\t\tif (dataType === \"enum\") type = \"select\";\n\t\t\t\tif (dataType === \"enum-multi\") type = \"select-multi\";\n\t\t\t\tr.push({\n\t\t\t\t\tname: key,\n\t\t\t\t\tlabel: key,\n\t\t\t\t\toptional,\n\t\t\t\t\thidden,\n\t\t\t\t\trequired,\n\t\t\t\t\t[type === \"number\" ? \"min\" : \"minLength\"]: minLength,\n\t\t\t\t\t[type === \"number\" ? \"max\" : \"maxLength\"]: maxLength,\n\t\t\t\t\tpattern,\n\t\t\t\t\tparamType: method === \"GET\" ? \"param\" : \"body\",\n\t\t\t\t\tvalue,\n\t\t\t\t\ttype,\n\t\t\t\t\tdataType,\n\t\t\t\t\tvalues,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\tgetService(fullName) {\n\t\t\treturn this.services.find((svc) => svc.fullName == fullName) || {};\n\t\t},\n\t\tclearResponse(item) {\n\t\t\titem.response = undefined;\n\t\t\titem.duration = undefined;\n\t\t\titem.loading = false;\n\t\t\titem.status = undefined;\n\t\t},\n\t\tcallAction: function (item, fullName) {\n\t\t\tif (!item.rest) return;\n\t\t\titem.loading = true;\n\t\t\tconst service = this.services.find((svc) => svc.name == fullName);\n\t\t\tvar startTime = Date.now();\n\t\t\tconst method = item.rest.method || \"GET\";\n\t\t\tlet url = item.rest.url;\n\t\t\tlet fields = item.fields;\n\t\t\tlet body = null;\n\t\t\tlet params = null;\n\t\t\tif (fields) {\n\t\t\t\tbody = {};\n\t\t\t\tparams = {};\n\t\t\t\tfields.forEach((field) => {\n\t\t\t\t\tconst value = field.value;\n\t\t\t\t\tif (field.paramType == \"body\") {\n\t\t\t\t\t\tbody[field.name] = value;\n\t\t\t\t\t\tif (value === undefined && field.optional === true)\n\t\t\t\t\t\t\tdelete body[field.name];\n\t\t\t\t\t} else if (field.paramType == \"param\") {\n\t\t\t\t\t\tparams[field.name] = value;\n\t\t\t\t\t\tif (value === undefined && field.optional === true)\n\t\t\t\t\t\t\tdelete params[field.name];\n\t\t\t\t\t} else if (field.paramType == \"url\") {\n\t\t\t\t\t\tif (value === undefined && field.optional === true)\n\t\t\t\t\t\t\turl = url.replace(`:${field.name}`, \"\");\n\t\t\t\t\t\telse url = url.replace(`:${field.name}`, value);\n\t\t\t\t\t}\n\t\t\t\t\turl = url.replace(`:${field.name}`, value);\n\t\t\t\t});\n\t\t\t\tif (body && method == \"GET\") body = null;\n\t\t\t\tif (params && Object.keys(params).length > 0) {\n\t\t\t\t\tconst qparams = {};\n\t\t\t\t\tfor (const key in params)\n\t\t\t\t\t\tif (params[key] !== undefined)\n\t\t\t\t\t\t\tqparams[key] = params[key];\n\t\t\t\t\turl += \"?\" + new URLSearchParams(qparams).toString();\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst authtoken = this.globalAuth.token;\n\t\t\tconst tenant = this.globalAuth.tenant;\n\t\t\tconst authHeader = {};\n\t\t\tif (authtoken) authHeader[\"Authorization\"] = `Bearer ${authtoken}`;\n\t\t\tif (tenant) authHeader[\"x-tenant\"] = tenant;\n\t\t\treturn fetch(url, {\n\t\t\t\tmethod,\n\t\t\t\tbody: body ? JSON.stringify(body) : null,\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t...authHeader,\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then(function (res) {\n\t\t\t\t\titem.status = res.status;\n\t\t\t\t\titem.duration = Date.now() - startTime;\n\t\t\t\t\treturn res.json().then((json) => {\n\t\t\t\t\t\titem.response = json;\n\t\t\t\t\t\titem.loading = false;\n\t\t\t\t\t\tif (item.afterResponse) return item.afterResponse(json);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(function (err) {\n\t\t\t\t\titem.status = \"ERR\";\n\t\t\t\t\titem.duration = Date.now() - startTime;\n\t\t\t\t\titem.response = err.message;\n\t\t\t\t\titem.loading = false;\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t},\n\t\tupdateBrokerOptions: function (name) {\n\t\t\tthis.req(\"/api/~node/options\", null).then(\n\t\t\t\t(res) => (this.broker = res)\n\t\t\t);\n\t\t},\n\t\tupdateNodeList: function (name) {\n\t\t\tthis.req(\"/api/~node/list\", null).then((res) => {\n\t\t\t\tres.sort((a, b) => a.id.localeCompare(b.id));\n\t\t\t\tthis.nodes = res;\n\t\t\t});\n\t\t},\n\t\tupdateServiceList: function (name) {\n\t\t\tthis.req(\"/api/~node/services?withActions=true\", null)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tthis.services = res;\n\t\t\t\t\tres.sort((a, b) => a.name.localeCompare(b.name));\n\t\t\t\t\tres.forEach((svc) => svc.nodes.sort());\n\t\t\t\t})\n\t\t\t\t.then(() => this.req(\"/api/~node/actions\", null))\n\t\t\t\t.then((res) => {\n\t\t\t\t\tres.sort((a, b) => a.name.localeCompare(b.name));\n\t\t\t\t\tconst actions = res.reduce((a, b) => {\n\t\t\t\t\t\ta[b.name] = b;\n\t\t\t\t\t\treturn a;\n\t\t\t\t\t}, {});\n\t\t\t\t\tthis.actions = actions;\n\t\t\t\t\tif (this.page === \"apis\") {\n\t\t\t\t\t\tthis.requests = {};\n\t\t\t\t\t\tfor (const service of this.services) {\n\t\t\t\t\t\t\tthis.requests[service.fullName] = [];\n\t\t\t\t\t\t\tconst version = service.version\n\t\t\t\t\t\t\t\t? \"v\" + service.version + \"/\"\n\t\t\t\t\t\t\t\t: \"\";\n\t\t\t\t\t\t\tfor (const key in service.actions) {\n\t\t\t\t\t\t\t\tconst action = service.actions[key];\n\t\t\t\t\t\t\t\tif (!action.rest) continue;\n\t\t\t\t\t\t\t\tconst req = {\n\t\t\t\t\t\t\t\t\texpand: false,\n\t\t\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t\t\t\tid: action.name,\n\t\t\t\t\t\t\t\t\taction: action.name,\n\t\t\t\t\t\t\t\t\trest: this.getRest(action),\n\t\t\t\t\t\t\t\t\tfields: action.fields,\n\t\t\t\t\t\t\t\t\tresponse: null,\n\t\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\t\tduration: null,\n\t\t\t\t\t\t\t\t\tafterResponse: action.afterResponse,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tconst baseUrl = service.settings.rest;\n\t\t\t\t\t\t\t\tif (req.rest.method === \"*\")\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\"GET\",\n\t\t\t\t\t\t\t\t\t\t\"POST\",\n\t\t\t\t\t\t\t\t\t\t\"PUT\",\n\t\t\t\t\t\t\t\t\t\t\"PATCH\",\n\t\t\t\t\t\t\t\t\t\t\"DELETE\",\n\t\t\t\t\t\t\t\t\t].forEach((method) => {\n\t\t\t\t\t\t\t\t\t\tconst req2 = Object.assign({}, req);\n\t\t\t\t\t\t\t\t\t\treq2.id =\n\t\t\t\t\t\t\t\t\t\t\treq2.id +\n\t\t\t\t\t\t\t\t\t\t\t\".\" +\n\t\t\t\t\t\t\t\t\t\t\tmethod.toLocaleLowerCase();\n\t\t\t\t\t\t\t\t\t\treq2.rest = Object.assign({}, req.rest);\n\t\t\t\t\t\t\t\t\t\treq2.rest.method = method;\n\t\t\t\t\t\t\t\t\t\tconst url = baseUrl\n\t\t\t\t\t\t\t\t\t\t\t? `/api${baseUrl}${req2.rest.path}`\n\t\t\t\t\t\t\t\t\t\t\t: `/api/${version}${service.name}${req2.rest.path}`;\n\t\t\t\t\t\t\t\t\t\treq2.rest.url = url;\n\t\t\t\t\t\t\t\t\t\treq2.fields = this.getFields(\n\t\t\t\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\t\t\t\treq2.rest.method,\n\t\t\t\t\t\t\t\t\t\t\treq2.rest.url\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.requests[service.fullName].push(\n\t\t\t\t\t\t\t\t\t\t\treq2\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tlet version = service.version\n\t\t\t\t\t\t\t\t\t\t? \"v\" + service.version + \"/\"\n\t\t\t\t\t\t\t\t\t\t: \"\";\n\t\t\t\t\t\t\t\t\tlet url = baseUrl\n\t\t\t\t\t\t\t\t\t\t? `/api${baseUrl}${req.rest.path}`\n\t\t\t\t\t\t\t\t\t\t: `/api/${version}${service.name}${req.rest.path}`;\n\t\t\t\t\t\t\t\t\treq.rest.url = url;\n\t\t\t\t\t\t\t\t\treq.fields = this.getFields(\n\t\t\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\t\t\treq.rest.method,\n\t\t\t\t\t\t\t\t\t\treq.rest.url\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.requests[service.fullName].push(req);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (this.requests[service.fullName].length === 0)\n\t\t\t\t\t\t\t\tdelete this.requests[service.fullName];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t\treq: function (url, params) {\n\t\t\treturn fetch(url, {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tbody: params ? JSON.stringify(params) : null,\n\t\t\t}).then(function (res) {\n\t\t\t\treturn res.json();\n\t\t\t});\n\t\t},\n\t\tupdatePageResources() {\n\t\t\tif (this.page == \"nodes\") return this.updateNodeList();\n\t\t\tif (this.page == \"services\") return this.updateServiceList();\n\t\t},\n\n\t\tcall(path, method, body) {\n\t\t\t/**\n\t\t\t * Вот тут должен быть не пустой context.active(),\n\t\t\t * чтобы на BE был передан верный tracecontext.\n\t\t\t *\n\t\t\t * Если context.active() пустой, то генерируется\n\t\t\t * tracecontext от места где выполняется fetch,\n\t\t\t * и мы не узнаем откуда был вызван данный fetch.\n\t\t\t */\n\n\t\t\tconsole.log(context.active());\n\n\t\t\treturn fetch(window.location.origin + path, {\n\t\t\t\tmethod,\n\t\t\t\tbody: body ? JSON.stringify(body) : null,\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.error(error);\n\n\t\t\t\t\treturn {};\n\t\t\t\t});\n\t\t},\n\t\tasync getCar() {\n\t\t\tconst { rows } = await this.call(\"/api/car?pageSize=10000\", \"GET\");\n\n\t\t\tthis.$data.cars = rows;\n\t\t},\n\t\tasync getCart() {\n\t\t\tconst { rows } = await this.call(\"/api/cart?pageSize=10000\", \"GET\");\n\n\t\t\tthis.$data.carts = rows;\n\t\t},\n\t\tasync getPartners() {\n\t\t\tconst { rows } = await this.call(\n\t\t\t\t\"/api/partner?pageSize=10000\",\n\t\t\t\t\"GET\"\n\t\t\t);\n\n\t\t\tthis.$data.partners = rows;\n\t\t},\n\t\tasync getProducts() {\n\t\t\tconst { rows } = await this.call(\n\t\t\t\t\"/api/product?pageSize=10000\",\n\t\t\t\t\"GET\"\n\t\t\t);\n\n\t\t\tthis.$data.products = rows;\n\t\t},\n\t\tasync getUsers() {\n\t\t\tconst { rows } = await this.call(\"/api/user?pageSize=10000\", \"GET\");\n\n\t\t\tthis.$data.users = rows;\n\t\t},\n\t\tasync getOrders() {\n\t\t\tconst { rows } = await this.call(\n\t\t\t\t\"/api/order?pageSize=10000\",\n\t\t\t\t\"GET\"\n\t\t\t);\n\n\t\t\tthis.$data.orders = rows;\n\t\t},\n\n\t\t/**\n\t\t * Эмуляция ситуации с несколькими параллельными запросами\n\t\t * click\n\t\t *  -> (async) get car -> проброс на BE\n\t\t *\t  -> Trace from BE ...\n\t\t * \t  -> (sync) compute some action\n\t\t * \t\t-> (sync) compute item\n\t\t * \t\t-> (sync) compute another item\n\t\t *  -> (async) get cart -> проброс на BE\n\t\t * \t  -> Trace from BE ...\n\t\t * \t  -> (async) compute some action\n\t\t * \t\t-> (async) compute item\n\t\t * \t\t-> (async) compute another item\n\t\t *  -> (async) get partners -> проброс на BE\n\t\t * \t  -> Trace from BE ...\n\t\t *  -> (async) get products -> проброс на BE\n\t\t * \t  -> Trace from BE ...\n\t\t *\t-> (async) get users -> проброс на BE\n\t\t *\t  -> Trace from BE ...\n\t\t */\n\t\tasync fetchData() {\n\t\t\tawait Promise.all([\n\t\t\t\tthis.getCar(),\n\t\t\t\tthis.getCart(),\n\t\t\t\tthis.getPartners(),\n\t\t\t\tthis.getProducts(),\n\t\t\t\tthis.getUsers(),\n\t\t\t\tthis.getOrders(),\n\t\t\t]);\n\t\t},\n\n\t\tasync addToCart({ _id, ...product }) {\n\t\t\tawait this.call(\"/api/cart\", \"POST\", product);\n\t\t\tawait this.getCart();\n\t\t},\n\t\tasync removeFromCart(cartId) {\n\t\t\tawait this.call(\"/api/cart/\" + cartId, \"DELETE\", { id: cartId });\n\t\t\tawait this.getCart();\n\t\t},\n\t\tasync makeOrder(carts) {\n\t\t\tawait Promise.all(\n\t\t\t\tcarts.map(async ({ _id, ...cart }) => {\n\t\t\t\t\tawait this.call(\"/api/cart/\" + _id, \"DELETE\", {\n\t\t\t\t\t\tid: _id,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.call(\"/api/order\", \"POST\", cart);\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tawait this.getCart();\n\t\t\tawait this.getOrders();\n\t\t},\n\t\tasync sendOrder(orders) {\n\t\t\tawait Promise.all(\n\t\t\t\torders.map(async ({ _id, ...order }) => {\n\t\t\t\t\tawait this.call(\"/api/order/\" + _id, \"DELETE\");\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tawait this.getOrders();\n\t\t},\n\t},\n\tmounted() {\n\t\tconst page = localStorage.getItem(\"lastPage\");\n\n\t\tthis.page = page ? page : \"home\";\n\n\t\tif (this.page === \"apis\") {\n\t\t\tthis.refreshApiPage();\n\t\t}\n\n\t\tconst globalAuth = localStorage.getItem(\"globalAuth\");\n\n\t\tthis.globalAuth = globalAuth ? JSON.parse(globalAuth) : {};\n\n\t\tsetInterval(() => {\n\t\t\tthis.updatePageResources();\n\t\t}, 2000);\n\n\t\tthis.updateBrokerOptions();\n\t},\n});\n\napp.mount(\"#app\");\n"],"names":[],"version":3,"file":"index.b9bd9706.js.map","sourceRoot":"/__parcel_source_root/"}